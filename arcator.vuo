/**
 * @file
 * This composition does...
 *
 * @copyright Copyright Â© 2017 [renaars](https://vuo.org/user/105)
 * @see This is a Vuo Composition source code file.  See http://vuo.org for further information.
 */

digraph G
{
BecameFalse [type="vuo.event.becameFalse2" version="2.0.0" label="Became False|<refresh>refresh\l|<value>value\l|<becameFalse>becameFalse\r" pos="540,90"];
BecameTrue [type="vuo.event.becameTrue" version="1.0.0" label="Became True|<refresh>refresh\l|<value>value\l|<becameTrue>becameTrue\r" pos="540,150"];
ConvertTextToInteger [type="vuo.type.text.integer" version="1.0.1" label="Convert Text to Integer|<refresh>refresh\l|<text>text\l|<integer>integer\r" pos="1350,735"];
Count [type="vuo.math.count.VuoReal" version="1.0.0" label="Count|<refresh>refresh\l|<increment>increment\l|<decrement>decrement\l|<setCount>setCount\l|<count>count\r" pos="705,195" _increment="1.0" _decrement="1.0" _setCount="0"];
FilterController [type="vuo.midi.filter.controller" version="2.0.0" label="Filter Controller|<refresh>refresh\l|<controller>controller\l|<channel>channel\l|<controllerNumber>controllerNumber\l|<value>value\r" pos="285,180" _channel="2"];
FilterController2 [type="vuo.midi.filter.controller" version="2.0.0" label="Filter Controller|<refresh>refresh\l|<controller>controller\l|<channel>channel\l|<controllerNumber>controllerNumber\l|<value>value\r" pos="285,270" _channel="5"];
FireOnStart [type="vuo.event.fireOnStart" version="1.0.0" label="Fire on Start|<refresh>refresh\l|<started>started\r" pos="-360,135" _started_eventThrottling="enqueue"];
GetControllerValues [type="vuo.midi.get.controller" version="1.0.0" label="Get Controller Values|<refresh>refresh\l|<controller>controller\l|<channel>channel\r|<controllerNumber>controllerNumber\r|<value>value\r" pos="-30,360"];
GetMessageValues [type="vuo.osc.message.get.1.VuoReal" version="1.0.1" label="Get Message Values|<refresh>refresh\l|<message>message\l|<address>address\r|<data1>data1\r" pos="780,630"];
HoldValue2 [type="vuo.data.hold.VuoReal" version="2.0.0" label="Hold Value|<refresh>refresh\l|<initialValue>initialValue\l|<newValue>newValue\l|<heldValue>heldValue\r" pos="840,120"];
HoldValue5 [type="vuo.data.hold.VuoMidiController" version="2.0.0" label="Hold Value|<refresh>refresh\l|<initialValue>initialValue\l|<newValue>newValue\l|<heldValue>heldValue\r" pos="1395,345"];
IsIntegerNonzero2 [type="vuo.type.integer.boolean" version="1.0.1" label="Is Integer Nonzero|<refresh>refresh\l|<integer>integer\l|<boolean>boolean\r" pos="690,135"];
IsIntegerNonzero3 [type="vuo.type.integer.boolean" version="1.0.1" label="Is Integer Nonzero|<refresh>refresh\l|<integer>integer\l|<boolean>boolean\r" pos="780,75"];
IsRealNonzero2 [type="vuo.type.real.boolean" version="1.0.0" label="Is Real Nonzero|<refresh>refresh\l|<real>real\l|<boolean>boolean\r" pos="1005,180"];
MakeController [type="vuo.midi.make.controller" version="1.0.0" label="Make Controller|<refresh>refresh\l|<channel>channel\l|<controllerNumber>controllerNumber\l|<value>value\l|<controller>controller\r" pos="1200,360" _channel="16" _value="60"];
MakeController2 [type="vuo.midi.make.controller" version="1.0.0" label="Make Controller|<refresh>refresh\l|<channel>channel\l|<controllerNumber>controllerNumber\l|<value>value\l|<controller>controller\r" pos="1155,615" _channel="3"];
ReceiveMIDIEvents [type="vuo.midi.receive" version="2.1.1" label="Receive MIDI Events|<refresh>refresh\l|<device>device\l|<receivedNote>receivedNote\r|<receivedController>receivedController\r|<receivedPitchBend>receivedPitchBend\r" pos="-225,165" _device="{\"id\":-1,\"name\":\"Midi Fighter Twister\"}" _receivedNote_eventThrottling="enqueue" _receivedController_eventThrottling="enqueue" _receivedPitchBend_eventThrottling="enqueue"];
ReceiveOSCMessages [type="vuo.osc.receive2" version="2.0.0" label="Receive OSC Messages|<refresh>refresh\l|<device>device\l|<receivedMessage>receivedMessage\r" pos="585,630" _device="null" _receivedMessage_eventThrottling="enqueue"];
Round3 [type="vuo.math.round" version="2.0.0" label="Round|<refresh>refresh\l|<real>real\l|<rounded>rounded\r" pos="1350,750"];
Scale4 [type="vuo.math.scale.VuoReal" version="2.0.0" label="Scale|<refresh>refresh\l|<value>value\l|<start>start\l|<end>end\l|<scaledStart>scaledStart\l|<scaledEnd>scaledEnd\l|<limitToRange>limitToRange\l|<scaledValue>scaledValue\r" pos="960,690" _start="0." _end="1." _scaledStart="17" _scaledEnd="47" _limitToRange="true"];
SelectEventOutput [type="vuo.select.out.boolean.event" version="2.0.0" label="Select Event Output|<refresh>refresh\l|<which>which\l|<in>in\l|<falseOption>falseOption\r|<trueOption>trueOption\r" pos="1050,120"];
SendMIDIEvent [type="vuo.midi.send" version="2.1.0" label="Send MIDI Event|<refresh>refresh\l|<device>device\l|<sendNote>sendNote\l|<sendController>sendController\l|<sendPitchBend>sendPitchBend\l" pos="1575,315" _device="{\"id\":-1,\"name\":\"To VDMX\"}"];
SendMIDIEvent2 [type="vuo.midi.send" version="2.1.0" label="Send MIDI Event|<refresh>refresh\l|<device>device\l|<sendNote>sendNote\l|<sendController>sendController\l|<sendPitchBend>sendPitchBend\l" pos="1395,585" _device="{\"id\":-1,\"name\":\"Midi Fighter Twister\"}"];

BecameFalse:becameFalse -> HoldValue2:refresh;
BecameTrue:becameTrue -> Count:setCount;
ConvertTextToInteger:integer -> MakeController2:controllerNumber;
Count:count -> HoldValue2:newValue;
FilterController2:value -> Count:increment [event=true];
FilterController:value -> IsIntegerNonzero2:integer;
FilterController:value -> IsIntegerNonzero3:integer;
FireOnStart:started -> ReceiveMIDIEvents:refresh;
GetControllerValues:controllerNumber -> FilterController2:controllerNumber;
GetControllerValues:controllerNumber -> FilterController:controllerNumber;
GetControllerValues:controllerNumber -> MakeController:controllerNumber;
GetMessageValues:address -> ConvertTextToInteger:text;
GetMessageValues:data1 -> Scale4:value;
HoldValue2:heldValue -> IsRealNonzero2:real;
HoldValue5:heldValue -> SendMIDIEvent:sendController;
IsIntegerNonzero2:boolean -> BecameTrue:value;
IsIntegerNonzero3:boolean -> BecameFalse:value;
IsRealNonzero2:boolean -> SelectEventOutput:which;
MakeController2:controller -> SendMIDIEvent2:sendController;
MakeController:controller -> HoldValue5:newValue;
ReceiveMIDIEvents:receivedController -> FilterController2:controller;
ReceiveMIDIEvents:receivedController -> FilterController:controller;
ReceiveMIDIEvents:receivedController -> GetControllerValues:controller;
ReceiveOSCMessages:receivedMessage -> GetMessageValues:message;
Round3:rounded -> MakeController2:value;
Scale4:scaledValue -> Round3:real;
SelectEventOutput:falseOption -> HoldValue5:refresh;
}
